/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.project;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Fahim
 */
public class Home extends javax.swing.JInternalFrame {

    /**
     * Creates new form Home
     */
    private String uName;
    private File fileList[] = null;

    public Home(String username) throws IOException {
        this.uName = username+ ",";
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        lblName.setText(uName);
        setWelcomeTime();
        setFilePaths();
        startSlides();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblWelcomeTime = new javax.swing.JLabel();
        lblAppName = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(810, 445));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblWelcome.setBackground(new java.awt.Color(153, 153, 153));
        lblWelcome.setFont(new java.awt.Font("Yellowtail", 1, 48)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("WELCOME TO");
        getContentPane().add(lblWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 430, 50));

        lblName.setFont(new java.awt.Font("Yellowtail", 1, 26)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblName.setText("Name");
        getContentPane().add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 340, 30));

        lblWelcomeTime.setFont(new java.awt.Font("Yellowtail", 0, 24)); // NOI18N
        lblWelcomeTime.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWelcomeTime.setText("Good Morning!!!");
        getContentPane().add(lblWelcomeTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 300, 30));

        lblAppName.setFont(new java.awt.Font("Yellowtail", 0, 36)); // NOI18N
        lblAppName.setForeground(new java.awt.Color(255, 255, 255));
        lblAppName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAppName.setText("Travel Sri Lanka");
        getContentPane().add(lblAppName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 250, 40));

        lblBackground.setIcon(new javax.swing.ImageIcon("C:\\Users\\Fahim\\Documents\\NetBeansProjects\\Project\\Project Only Home Issue\\Project\\Image\\A.jpg")); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 445));
        lblBackground.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAppName;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblWelcomeTime;
    // End of variables declaration//GEN-END:variables
    private String file_paths[];

    private void startSlides() {
        System.out.println("Start statrSlides");
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            int i = 0;

            @Override
            public void run() {
                if (i == fileList.length) {
                    i = 0;
                }
                System.out.println("startSlides" + lblBackground.getWidth() + "  startSlide  " + lblBackground.getHeight() + "      i " + i);
                setBackImage(fileList[i].getAbsolutePath());
                i++;
            }
        };
        Calendar date = Calendar.getInstance();
        timer.scheduleAtFixedRate(task, date.getTime(), 3000);
    }

    private void setFilePaths() {
        String path = "Image";
        File file = new File(path);

        if (file.exists() && file.isDirectory()) {
            fileList = file.listFiles();
        }

    }

    private void setBackImage(String filepath) {
        BufferedImage image = null;
        File file = null;

        file = new File(filepath);
        try {
            image = ImageIO.read(file);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        Image image2 = image.getScaledInstance(lblBackground.getWidth(), lblBackground.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(image2);
        lblBackground.setIcon(icon);
    }

  
    private void setWelcomeTime() {
        String welcomeTime = "";
        LocalDateTime date=LocalDateTime.now();
        int hours = date.getHour();

        System.out.println("Time :"+hours);
        if (hours >= 1 && hours <= 12) {
            welcomeTime = "Good Morning!!!";
        } else if (hours >= 12 && hours <= 16) {
            welcomeTime = "Good Afternoon!!!";
        } else if (hours >= 16) {
            welcomeTime = "Good Evening";
        } 
        lblWelcomeTime.setText(welcomeTime);
    }  
    
}
